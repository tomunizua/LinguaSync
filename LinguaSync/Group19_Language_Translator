#!/usr/bin/python3

import http.client
import json

LANGUAGE_CODES = {
  'af': 'Afrikaans',
  'sq': 'Albanian',
  'am': 'Amharic',
  'ar': 'Arabic',
  'hy': 'Armenian',
  'az': 'Azerbaijani',
  'eu': 'Basque',
  'be': 'Belarusian',
  'bn': 'Bengali',
  'bs': 'Bosnian',
  'bg': 'Bulgarian',
  'ca': 'Catalan',
  'ceb': 'Cebuano',
  'ny': 'Chichewa',
  'zh-cn': 'Chinese (Simplified)',
  'zh-tw': 'Chinese (Traditional)',
  'co': 'Corsican',
  'hr': 'Croatian',
  'cs': 'Czech',
  'da': 'Danish',
  'nl': 'Dutch',
  'en': 'English',
  'eo': 'Esperanto',
  'et': 'Estonian',
  'tl': 'Filipino',
  'fi': 'Finnish',
  'fr': 'French',
  'fy': 'Frisian',
  'gl': 'Galician',
  'ka': 'Georgian',
  'de': 'German',
  'el': 'Greek',
  'gu': 'Gujarati',
  'ht': 'Haitian Creole',
  'ha': 'Hausa',
  'haw': 'Hawaiian',
  'iw': 'Hebrew',
  'he': 'Hebrew',
  'hi': 'Hindi',
  'hmn': 'Hmong',
  'hu': 'Hungarian',
  'is': 'Icelandic',
  'ig': 'Igbo',
  'id': 'Indonesian',
  'ga': 'Irish',
  'it': 'Italian',
  'ja': 'Japanese',
  'jw': 'Javanese',
  'kn': 'Kannada',
  'kk': 'Kazakh',
  'km': 'Khmer',
  'ko': 'Korean',
  'ku': 'Kurdish (Kurmanji)',
  'ky': 'Kyrgyz',
  'lo': 'Lao',
  'la': 'Latin',
  'lv': 'Latvian',
  'lt': 'Lithuanian',
  'lb': 'Luxembourgish',
  'mk': 'Macedonian',
  'mg': 'Malagasy',
  'ms': 'Malay',
  'ml': 'Malayalam',
  'mt': 'Maltese',
  'mi': 'Maori',
  'mr': 'Marathi',
  'mn': 'Mongolian',
  'my': 'Myanmar (Burmese)',
  'ne': 'Nepali',
  'no': 'Norwegian',
  'or': 'Odia',
  'ps': 'Pashto',
  'fa': 'Persian',
  'pl': 'Polish',
  'pt': 'Portuguese',
  'pa': 'Punjabi',
  'ro': 'Romanian',
  'ru': 'Russian',
  'sm': 'Samoan',
  'gd': 'Scots Gaelic',
  'sr': 'Serbian',
  'st': 'Sesotho',
  'sn': 'Shona',
  'sd': 'Sindhi',
  'si': 'Sinhala',
  'sk': 'Slovak',
  'sl': 'Slovenian',
  'so': 'Somali',
  'es': 'Spanish',
  'su': 'Sundanese',
  'sw': 'Swahili',
  'sv': 'Swedish',
  'tg': 'Tajik',
  'ta': 'Tamil',
  'te': 'Telugu',
  'th': 'Thai',
  'tr': 'Turkish',
  'uk': 'Ukrainian',
  'ur': 'Urdu',
  'ug': 'Uyghur',
  'uz': 'Uzbek',
  'vi': 'Vietnamese',
  'cy': 'Welsh',
  'xh': 'Xhosa',
  'yi': 'Yiddish',
  'yo': 'Yoruba',
  'zu': 'Zulu',
}

def translate_text(source_text, source_lang, target_lang):
  conn = http.client.HTTPSConnection("google-translate1.p.rapidapi.com")

  payload = "source={}&target={}&q={}".format(
    source_lang, target_lang, source_text
  ).encode('utf-8')

  headers = {
    'Accept-Encoding': "application/gzip",
    'X-RapidAPI-Key': "f6b0cedb0dmsh37e00174a4d5e60p11b68cjsndb0a3f5d2356",
    'X-RapidAPI-Host': "google-translate1.p.rapidapi.com"
  }

  try:
    conn.request("POST", "/language/translate/v2", payload, headers=headers)
    res = conn.getresponse()
    data = res.read().decode("utf-8")

    # Parse the JSON response
    parsed_data = json.loads(data)

    # Check for translation data
    if "translations" in parsed_data and parsed_data["translations"]:
      translated_text = parsed_data["translations"][0]["text"]
      return translated_text
    else:
      return "Translation error occurred."

  except (json.JSONDecodeError, KeyError, IndexError) as e:
    return "Error: {}".format(e)

def display_language_codes():
  print("\nSupported Language Codes:")
  print("------------------------")
  for code, name in LANGUAGE_CODES.items():
    print("{}: {}".format(code, name))

def main():
  print("Welcome to Teniola's Language Translation Tool!")
  print("Enter 'langs' to view the list of language codes.")

  source_lang = input("Enter the source language code (e.g., 'en' for English): ")
  if source_lang.lower() == 'langs':
    display_language_codes()
    source_lang = input("\nEnter the source language code: ")

  source_text = input("Enter the text to translate: ")
  target_lang = input("Enter the target language code (e.g., 'es' for Spanish): ")

  translated_text = translate_text(source_text, source_lang, target_lang)

  print("\nTranslation Result:")
  print("-------------------")
  print("Source Text: {}".format(source_text))
  print("Translated Text: {}".format(translated_text.encode('utf-8').decode('unicode-escape')))

if __name__ == "__main__":
  main()
